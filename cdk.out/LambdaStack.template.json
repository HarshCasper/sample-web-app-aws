{
 "Resources": {
  "MyWebAppBucketB9F20F45": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "Private",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:cr-owned:89e772d4",
      "Value": "true"
     }
    ],
    "WebsiteConfiguration": {
     "ErrorDocument": "error.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "LambdaStack/MyWebAppBucket/Resource"
   }
  },
  "MyWebAppBucketPolicyB1980AA6": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "MyWebAppBucketB9F20F45"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyWebAppBucketB9F20F45",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyWebAppBucketB9F20F45",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyWebAppBucketB9F20F45",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyWebAppBucketB9F20F45",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "MyWebAppBucketB9F20F45",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/MyWebAppBucket/Policy/Resource"
   }
  },
  "OAIE1EFC67F": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/OAI/Resource"
   }
  },
  "BackendCFCFDistribution7FE8ADFE": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachedMethods": [
        "GET",
        "HEAD"
       ],
       "Compress": true,
       "ForwardedValues": {
        "Cookies": {
         "Forward": "none"
        },
        "QueryString": false
       },
       "PathPattern": "/*",
       "TargetOriginId": "origin1",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "ForwardedValues": {
       "Cookies": {
        "Forward": "none"
       },
       "QueryString": false
      },
      "TargetOriginId": "origin1",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "DomainName": {
        "Fn::GetAtt": [
         "MyWebAppBucketB9F20F45",
         "RegionalDomainName"
        ]
       },
       "Id": "origin1",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "OAIE1EFC67F"
           }
          ]
         ]
        }
       }
      }
     ],
     "PriceClass": "PriceClass_100",
     "ViewerCertificate": {
      "CloudFrontDefaultCertificate": true
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/BackendCF/CFDistribution"
   }
  },
  "HelloWorldFunctionServiceRole8E0BD458": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldFunction/ServiceRole/Resource"
   }
  },
  "HelloWorldFunctionB2AB6E79": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fffa7d1d8eb11eb3ae1f6b0369c0476b496d2c55302ccf9a94469fa6b49d110a.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloWorldFunctionServiceRole8E0BD458",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "HelloWorldFunctionServiceRole8E0BD458"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldFunction/Resource",
    "aws:asset:path": "asset.fffa7d1d8eb11eb3ae1f6b0369c0476b496d2c55302ccf9a94469fa6b49d110a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "HelloWorldApi9E278160": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "HelloWorldApi"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Resource"
   }
  },
  "HelloWorldApiDeployment65F822B56e537b62f4c6ba8413e415db6e1f43eb": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "HelloWorldApi9E278160"
    }
   },
   "DependsOn": [
    "HelloWorldApihelloGET9D1EC06B",
    "HelloWorldApihello69E87CE7"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Deployment/Resource"
   }
  },
  "HelloWorldApiDeploymentStageprod2E271AE0": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "HelloWorldApiDeployment65F822B56e537b62f4c6ba8413e415db6e1f43eb"
    },
    "RestApiId": {
     "Ref": "HelloWorldApi9E278160"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/DeploymentStage.prod/Resource"
   }
  },
  "HelloWorldApihello69E87CE7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloWorldApi9E278160",
      "RootResourceId"
     ]
    },
    "PathPart": "hello",
    "RestApiId": {
     "Ref": "HelloWorldApi9E278160"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Default/hello/Resource"
   }
  },
  "HelloWorldApihelloGETApiPermissionLambdaStackHelloWorldApiA4F262E9GEThello29C5FF49": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloWorldFunctionB2AB6E79",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloWorldApi9E278160"
       },
       "/",
       {
        "Ref": "HelloWorldApiDeploymentStageprod2E271AE0"
       },
       "/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Default/hello/GET/ApiPermission.LambdaStackHelloWorldApiA4F262E9.GET..hello"
   }
  },
  "HelloWorldApihelloGETApiPermissionTestLambdaStackHelloWorldApiA4F262E9GEThello775810A9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloWorldFunctionB2AB6E79",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloWorldApi9E278160"
       },
       "/test-invoke-stage/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Default/hello/GET/ApiPermission.Test.LambdaStackHelloWorldApiA4F262E9.GET..hello"
   }
  },
  "HelloWorldApihelloGET9D1EC06B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HelloWorldFunctionB2AB6E79",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloWorldApihello69E87CE7"
    },
    "RestApiId": {
     "Ref": "HelloWorldApi9E278160"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/HelloWorldApi/Default/hello/GET/Resource"
   }
  },
  "DeploymentAwsCliLayerB82B26A3": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/Deployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeploymentCustomResource47E8B2E6": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "762f54f4c3cd79c3c426bf46e473eed39fe8827649da764d55f7fb23477c88a2.zip",
     "76677871b840af8c9aad86addcb89ac63972b11df97106afec507ec72673dd64.zip"
    ],
    "SourceMarkers": [
     {},
     {
      "<<marker:0xbaba:0>>": {
       "Ref": "HelloWorldApi9E278160"
      },
      "<<marker:0xbaba:1>>": {
       "Ref": "AWS::Region"
      },
      "<<marker:0xbaba:2>>": {
       "Ref": "AWS::URLSuffix"
      },
      "<<marker:0xbaba:3>>": {
       "Ref": "HelloWorldApiDeploymentStageprod2E271AE0"
      }
     }
    ],
    "DestinationBucketName": {
     "Ref": "MyWebAppBucketB9F20F45"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LambdaStack/Deployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyWebAppBucketB9F20F45",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyWebAppBucketB9F20F45",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeploymentAwsCliLayerB82B26A3"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Ry27CMBD8Fu7G5dGqZx5CqkQFClJ7RMZZ0gXHRtl1IxTl3yvbacKB086sZ1/jmZy+vsvZSNU01vl1bPAkmwMrfRWqpmNDc9ksvb4Ci9XZdiiFvTOo70O644ksFUErtHE+P1fOsmx2FRZoF1oD0UcOlpFj8SpoNkHzXNE/f8NpjcQVnjyjs6H2kbfCqPKUK9lsvNX/ike8h6pEoo5t1R2qL6giP6AtDLDr9a1AVcomcwaCOMbh4IRaQfNjo4iASS5CEDncjLuXYFkmH9Z9ohXqhoViqNVdNtu4awbEixvGCR0cCuKBAzuwKuIuCWRAzlcagtE96Rol/An84/KQSqhtB13cNjRCWwTFzvPNc+fg0QRrjqombVAualoZjG6JlSd25dNp4SedzTGZZ10O8kIvv7OJnL7JyehCiOPKW8YSZJbiH3ASeL98AgAA"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "HelloWorldApiEndpointAD496187": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "HelloWorldApi9E278160"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "HelloWorldApiDeploymentStageprod2E271AE0"
      },
      "/"
     ]
    ]
   }
  },
  "CloudFrontDistributionURL": {
   "Value": {
    "Fn::GetAtt": [
     "BackendCFCFDistribution7FE8ADFE",
     "DomainName"
    ]
   }
  },
  "APIGatewayURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "HelloWorldApi9E278160"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "HelloWorldApiDeploymentStageprod2E271AE0"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}